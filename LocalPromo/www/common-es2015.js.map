{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-a6787d69.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4584ab5a.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/app/components/photo-card/photo-card.component.html","./src/app/compartilhado/authentication-service.ts","./src/app/components/photo-card/photo-card.component.scss","./src/app/components/photo-card/photo-card.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA,mEAAmE,qDAAoB;AACvF,kEAAkE,qDAAsB;AACxF;AACA;AACA,MAAM,6DAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC,MAAM,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACtCrF;AAAe,yZAA0V,mBAAmB,gDAAgD,cAAc,q6BAAq6B,oBAAoB,uUAAuU,SAAS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","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-e806d1f6.js';\nimport { createGesture } from './index-f49d994d.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  if (el.componentOnReady) {\n    await el.componentOnReady();\n  }\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<ion-card>\\n  <img [src]=\\\"photo?.photo_url\\\" alt=\\\"\\\">\\n  <ion-card-content>\\n    <ion-row class=\\\"ion-align-items-center\\\">\\n      <ion-col size=\\\"auto\\\">\\n        <ion-avatar class=\\\"feed-avatar\\\">\\n          <img [src]=\\\"photo?.user?.photo_url\\\" alt=\\\"\\\">\\n        </ion-avatar>\\n      </ion-col>\\n      <ion-col>\\n        <ion-card-title>{{photo?.user?.name}}</ion-card-title>\\n        <ion-card-subtitle>{{photo?.place}}</ion-card-subtitle>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row class=\\\"ion-margin-bottom\\\">\\n      <ion-col size=\\\"auto\\\" class=\\\"ion-no-padding\\\">\\n        <ion-button fill=\\\"clear\\\" color=\\\"danger\\\" (click)=\\\"photo.liked = !photo.liked\\\">\\n          <ion-icon [class.novo-like]=\\\"photo?.liked\\\" slot=\\\"icon-only\\\" [name]=\\\"photo?.liked ? 'heart' : 'heart-outline'\\\">\\n          </ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      <ion-col size=\\\"auto\\\" class=\\\"ion-no-padding\\\">\\n        <ion-button fill=\\\"clear\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"chatbubble-outline\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      <ion-col size=\\\"auto\\\" class=\\\"ion-no-padding\\\" style=\\\"margin-left: auto\\\">\\n        <ion-button fill=\\\"clear\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"bookmark-outline\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      {{photo?.description}}\\n    </ion-row>\\n    <ion-row *ngFor=\\\"let i of photo?.comment\\\">\\n      <ion-col size=\\\"2\\\">\\n        <ion-avatar class=\\\"feed-comment-avatar\\\">\\n          <img [src]=\\\"i.photo_url\\\" alt=\\\"\\\">\\n        </ion-avatar>\\n      </ion-col>\\n      <ion-col padding-left size=\\\"8\\\">\\n        <ion-row text-size=\\\"9px\\\">\\n          {{i.autor}}\\n        </ion-row>\\n        <ion-row>\\n          {{i.message}}\\n        </ion-row>\\n      </ion-col>\\n      <ion-col>\\n        <button ion-button icon-only clear item-right style=\\\"background-color: transparent;\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n        </button>\\n      </ion-col>\\n    </ion-row>\\n    <ion-item class=\\\"comentario\\\">\\n      <ion-label position=\\\"floating\\\">Deixe o seu comentário</ion-label>\\n      <ion-input [(ngModel)]=\\\"input\\\"></ion-input>\\n      <button ion-button icon-only clear item-right slot=\\\"end\\\" style=\\\"background-color: transparent;\\\"\\n        (click)=\\\"novoComentario(input)\\\">\\n        <ion-icon name=\\\"send-sharp\\\" slot=\\\"end\\\" class=\\\"icon\\\"></ion-icon>\\n      </button>\\n    </ion-item>\\n    <br>\\n    <small>\\n      Ver todos os {{photo?.comment?.length}} comentários\\n    </small>\\n  </ion-card-content>\\n</ion-card>\";","import { Injectable, NgZone } from '@angular/core';\nimport * as firebase from 'firebase/app';\n\n// import { User } from \"/user\";\nimport { Router } from \"@angular/router\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\n\nexport interface User {\n  uid: string;\n  email: string;\n  displayName: string;\n  photoURL: string;\n  emailVerified: boolean;\n  bio: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthenticationService {\n  userData: any;\n\n  constructor(\n    public afStore: AngularFirestore,\n    public ngFireAuth: AngularFireAuth,\n    public router: Router,\n    public ngZone: NgZone\n  ) {\n    this.ngFireAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    })\n  }\n\n  // Login in with email/password\n  SignIn(email, password) {\n    return this.ngFireAuth.signInWithEmailAndPassword(email, password)\n  }\n\n  // Register user with email/password\n\n  async RegisterUser(email, password) {\n    const algo = this.ngFireAuth.createUserWithEmailAndPassword(email, password).then(x => this.SetUserData(x.user))\n    return algo\n  }\n\n  // Email verification when new user register\n  SendVerificationMail() {\n    //   this.ngFireAuth.currentUser.then((e) => e.sendEmailVerification().then)\n    return this.ngFireAuth.currentUser.then(e => e.sendEmailVerification()\n\n      .then(() => {\n        this.router.navigate(['verify-email']);\n      }))\n  }\n\n  // Recover password\n  PasswordRecover(passwordResetEmail) {\n    return this.ngFireAuth.sendPasswordResetEmail(passwordResetEmail)\n      .then(() => {\n        window.alert('Password reset email has been sent, please check your inbox.');\n      }).catch((error) => {\n        window.alert(error)\n      })\n  }\n\n  // Returns true when user is looged in\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null) ? true : false;\n  }\n\n  // Returns true when user's email is verified\n  get isEmailVerified(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user.emailVerified !== false) ? true : false;\n  }\n\n\n  //   // Sign in with Gmail\n  //   GoogleAuth() {\n  //     return this.AuthLogin(new firebase.auth.GoogleAuthProvider());\n  //   }\n\n\n  // Auth providers\n  AuthLogin(provider) {\n    return this.ngFireAuth.signInWithPopup(provider)\n      .then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        })\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error)\n      })\n  }\n\n  // Store user in localStorage\n  async SetUserData(user) {\n    const userRef: AngularFirestoreDocument<User> = this.afStore.doc(`users/${user.uid}`);\n\n    userRef.get(user.uid).subscribe(e => {\n\n      const userData = e.data() ??\n      {\n        uid: user.uid,\n        email: user.email,\n        displayName: '',\n        photoURL: user.photoURL,\n        emailVerified: user.emailVerified,\n        bio: ''\n      };\n\n      return userRef.set(userData, {\n        merge: true\n      })\n    })\n  }\n\n  // Sign-out \n  SignOut() {\n    return this.ngFireAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.router.navigate(['login']);\n    })\n  }\n\n  GetCurrentUserData() {\n    // this.afStore.doc(`users/${user.uid}`);\n    console.log(this.afStore)\n    return this.afStore.collection\n  }\n\n}","export default \".feed-avatar {\\n  width: 3em;\\n  height: 3em;\\n}\\n\\n.feed-comment-avatar {\\n  width: 2.3em;\\n  height: 2.3em;\\n  padding: 3px;\\n}\\n\\n.icon {\\n  padding-top: 10px;\\n  align-self: center;\\n}\\n\\n.comentario {\\n  size: 90%;\\n  font-size: small;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9waG90by1jYXJkL3Bob3RvLWNhcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxVQUFBO0VBQ0EsV0FBQTtBQUNKOztBQUNBO0VBQ0ksWUFBQTtFQUNBLGFBQUE7RUFDQSxZQUFBO0FBRUo7O0FBQUE7RUFDSSxpQkFBQTtFQUNBLGtCQUFBO0FBR0o7O0FBREE7RUFDSSxTQUFBO0VBQ0EsZ0JBQUE7QUFJSiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGhvdG8tY2FyZC9waG90by1jYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZlZWQtYXZhdGFyIHtcbiAgICB3aWR0aDogM2VtO1xuICAgIGhlaWdodDogM2VtO1xufVxuLmZlZWQtY29tbWVudC1hdmF0YXJ7XG4gICAgd2lkdGg6IDIuM2VtO1xuICAgIGhlaWdodDogMi4zZW07XG4gICAgcGFkZGluZzogM3B4O1xufVxuLmljb257XG4gICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xufVxuLmNvbWVudGFyaW97XG4gICAgc2l6ZTogOTAlO1xuICAgIGZvbnQtc2l6ZTogc21hbGw7XG59Il19 */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\nexport interface Photo {\n  id: number;\n  originalid: string;\n  liked: boolean;\n  description: string;\n  comment_count: number;\n  comment: Comment[];\n  place: string;\n  user: {\n    id: number;\n    name: string;\n    photo_url: string;\n  };\n}\n\nexport interface Comment {\n  autor: string;\n  message: string;\n  photo_url: string;\n  id: number;\n}\n\n@Component({\n  selector: 'app-photo-card',\n  templateUrl: './photo-card.component.html',\n  styleUrls: ['./photo-card.component.scss'],\n})\nexport class PhotoCardComponent implements OnInit {\n\n  @Input() public photo: Photo;\n\n  constructor(private db: AngularFirestore) { }\n\n  ngOnInit() { }\n\n  public input : string;\n\n  novoComentario(input: string) {\n    const newComment: Comment = {\n      autor: this.photo.user.name,\n      id: 5,\n      message: input,\n      photo_url: this.photo.user.photo_url\n    };\n\n    this.photo.comment.push(newComment);\n\n    console.log(newComment);\n\n    this.db.collection('/feed/').doc<Photo>(this.photo.originalid).update(this.photo);\n    this.input = null;\n    // this.db.collection<Photo>('/feed/', e => e.where(\"id\", \"==\", this.photo.id)).snapshotChanges()\n    //   .subscribe((res) => {\n    //     let id = res[0].payload.doc.id;\n    //   });\n    // }\n  }\n}\n\n\n  // .update({comment: [{autor: \"Teste\", id: 3, message : input, photo_url: this.photo.user.photo_url}]})"],"sourceRoot":"webpack:///"}