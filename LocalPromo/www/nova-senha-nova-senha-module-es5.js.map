{"version":3,"sources":["webpack:///src/app/nova-senha/nova-senha.page.html","webpack:///src/app/nova-senha/nova-senha-routing.module.ts","webpack:///src/app/nova-senha/nova-senha.module.ts","webpack:///src/app/nova-senha/nova-senha.page.scss","webpack:///src/app/nova-senha/nova-senha.page.ts"],"names":["routes","path","component","NovaSenhaPageRoutingModule","imports","forChild","exports","NovaSenhaPageModule","declarations","NovaSenhaPage","alertCtrl","create","header","message","buttons","alert","present","onDidDismiss","result","console","log","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,0BAA0B;AAAA;AAAA,O;;AAA1BA,gCAA0B,6DAJtC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIsC,GAA1BH,0BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,mBAAmB;AAAA;AAAA,O;;AAAnBA,yBAAmB,6DAT/B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,qFAJO,CADD;AAORI,oBAAY,EAAE,CAAC,8DAAD;AAPN,OAAT,CAS+B,GAAnBD,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFE,aAAa;AAExB,+BAAmBC,SAAnB,EAA+C;AAAA;;AAA5B,eAAAA,SAAA,GAAAA,SAAA;AAA+B;;AAF1B;AAAA;AAAA,sCAIN;;;;;;;;AACF,6BAAM,KAAKA,SAAL,CAAeC,MAAf,CAAsB;AACxCC,8BAAM,EAAE,SADgC;AAExCC,+BAAO,EAAE,6CAF+B;AAGxCC,+BAAO,EAAE,CAAC,IAAD;AAH+B,uBAAtB,CAAN;;;AAARC,2B;;AAKN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;AACe,6BAAMD,KAAK,CAACE,YAAN,EAAN;;;AAATC,4B;AACNC,6BAAO,CAACC,GAAR,CAAYF,MAAZ;;;;;;;;;AACD;AAbuB;;AAAA;AAAA,S;;;;gBANjB;;;;AAMIT,mBAAa,6DALzB,gEAAU;AACTY,gBAAQ,EAAE,gBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,sGAFS;;;;AAAA,OAAV,CAKyB,GAAbb,aAAa,CAAb","file":"nova-senha-nova-senha-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n      </ion-buttons>\\n    <ion-title>Recuperar Senha</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <ion-header collapse=\\\"condense\\\">\\n      <ion-toolbar>\\n        <ion-title size=\\\"large\\\">LocalPromo</ion-title>\\n      </ion-toolbar>\\n    </ion-header>\\n  \\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Email</ion-label>\\n          <ion-input ngModel type=\\\"email\\\" name=\\\"email\\\"></ion-input>\\n          <ion-button texpand=\\\"full\\\" color=\\\"primary\\\"  (click)=\\\"showAlert()\\\" routerLink = \\\"/home\\\">Enviar Email</ion-button>\\n        </ion-item>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NovaSenhaPage } from './nova-senha.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NovaSenhaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NovaSenhaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NovaSenhaPageRoutingModule } from './nova-senha-routing.module';\n\nimport { NovaSenhaPage } from './nova-senha.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NovaSenhaPageRoutingModule\n  ],\n  declarations: [NovaSenhaPage]\n})\nexport class NovaSenhaPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdmEtc2VuaGEvbm92YS1zZW5oYS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n@Component({\n  selector: 'app-nova-senha',\n  templateUrl: './nova-senha.page.html',\n  styleUrls: ['./nova-senha.page.scss'],\n})\nexport class NovaSenhaPage{\n\n  constructor(public alertCtrl: AlertController) { }  \n  \n  async showAlert() {  \n    const alert = await this.alertCtrl.create({  \n      header: 'Sucesso',  \n      message: 'O foi enviado um  e-mail com reset de senha',  \n      buttons: ['OK']  \n    });  \n    await alert.present();  \n    const result = await alert.onDidDismiss();  \n    console.log(result);  \n  }  \n\n}\n"]}